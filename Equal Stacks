
 int equalStacks(vector<int> h1, vector<int> h2, vector<int> h3) {
    int ans=0;
    
    stack<int> s1;
    stack<int> s2;
    stack<int> s3;
    int sum1=0;
    for(int i=h1.size()-1;i>=0;i--){
        sum1+=h1[i];
        s1.push(h1[i]);
    }
    int sum2=0;
    for(int i=h2.size()-1;i>=0;i--){
        sum2+=h2[i];
        s2.push(h2[i]);
    }
    int sum3=0;
    for(int i=h3.size()-1;i>=0;i--){
        sum3+=h3[i];
        s3.push(h3[i]);
    }
    int minimum=min(sum1,sum2);
    minimum=min(minimum,sum3);
    
    while (sum1!=sum2 || sum1!=sum3) {
        if (sum1!=minimum) {
            sum1-=s1.top();
            s1.pop();
            if(sum1<minimum){
                minimum=sum1;
            }
        }
        else if (sum2!=minimum) {
            sum2-=s2.top();
            s2.pop();
            if(sum2<minimum){
                minimum=sum2;
            }
        }
        else if (sum3!=minimum) {
            sum3-=s3.top();
            s3.pop();
            if(sum3<minimum){
                minimum=sum3;
            }
        }
    }
    return minimum;

}


